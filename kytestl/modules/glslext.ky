const Version := 100;
const Revision := 3;

const GLSLOp := enum {
	GLSLBad := 0,              // Don't use
	GLSLRound := 1,
	GLSLRoundEven := 2,
	GLSLTrunc := 3,
	GLSLFAbs := 4,
	GLSLSAbs := 5,
	GLSLFSign := 6,
	GLSLSSign := 7,
	GLSLFloor := 8,
	GLSLCeil := 9,
	GLSLFract := 10,
	GLSLRadians := 11,
	GLSLDegrees := 12,
	GLSLSin := 13,
	GLSLCos := 14,
	GLSLTan := 15,
	GLSLAsin := 16,
	GLSLAcos := 17,
	GLSLAtan := 18,
	GLSLSinh := 19,
	GLSLCosh := 20,
	GLSLTanh := 21,
	GLSLAsinh := 22,
	GLSLAcosh := 23,
	GLSLAtanh := 24,
	GLSLAtan2 := 25,
	GLSLPow := 26,
	GLSLExp := 27,
	GLSLLog := 28,
	GLSLExp2 := 29,
	GLSLLog2 := 30,
	GLSLSqrt := 31,
	GLSLInverseSqrt := 32,
	GLSLDeterminant := 33,
	GLSLMatrixInverse := 34,
	GLSLModf := 35,            // second operand needs an OpVariable to write to
	GLSLModfStruct := 36,      // no OpVariable operand
	GLSLFMin := 37,
	GLSLUMin := 38,
	GLSLSMin := 39,
	GLSLFMax := 40,
	GLSLUMax := 41,
	GLSLSMax := 42,
	GLSLFClamp := 43,
	GLSLUClamp := 44,
	GLSLSClamp := 45,
	GLSLFMix := 46,
	GLSLIMix := 47,            // Reserved
	GLSLStep := 48,
	GLSLSmoothStep := 49,
	GLSLFma := 50,
	GLSLFrexp := 51,            // second operand needs an OpVariable to write to
	GLSLFrexpStruct := 52,      // no OpVariable operand
	GLSLLdexp := 53,
	GLSLPackSnorm4x8 := 54,
	GLSLPackUnorm4x8 := 55,
	GLSLPackSnorm2x16 := 56,
	GLSLPackUnorm2x16 := 57,
	GLSLPackHalf2x16 := 58,
	GLSLPackDouble2x32 := 59,
	GLSLUnpackSnorm2x16 := 60,
	GLSLUnpackUnorm2x16 := 61,
	GLSLUnpackHalf2x16 := 62,
	GLSLUnpackSnorm4x8 := 63,
	GLSLUnpackUnorm4x8 := 64,
	GLSLUnpackDouble2x32 := 65,
	GLSLLength := 66,
	GLSLDistance := 67,
	GLSLCross := 68,
	GLSLNormalize := 69,
	GLSLFaceForward := 70,
	GLSLReflect := 71,
	GLSLRefract := 72,
	GLSLFindILsb := 73,
	GLSLFindSMsb := 74,
	GLSLFindUMsb := 75,
	GLSLInterpolateAtCentroid := 76,
	GLSLInterpolateAtSample := 77,
	GLSLInterpolateAtOffset := 78,
	GLSLNMin := 79,
	GLSLNMax := 80,
	GLSLNClamp := 81,
	GLSLstd450Count
};

const GLSL_STD_EXT_INST := __spirv_include("GLSL.std.450");

inline __spirv_glsl :: (op : GLSLOp, r : &T<any>, params : any...) $ {
	__spirv(OpExtInst, T, r, GLSL_STD_EXT_INST, op, params...);
};
